{"name": "test_create_account_failed", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@class=\"woocommerce-error\"]//li\"}\n  (Session info: chrome=104.0.5112.102)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00EB78B3+2193587]\n\tOrdinal0 [0x00E50681+1771137]\n\tOrdinal0 [0x00D641A8+803240]\n\tOrdinal0 [0x00D924A0+992416]\n\tOrdinal0 [0x00D9273B+993083]\n\tOrdinal0 [0x00DBF7C2+1177538]\n\tOrdinal0 [0x00DAD7F4+1103860]\n\tOrdinal0 [0x00DBDAE2+1170146]\n\tOrdinal0 [0x00DAD5C6+1103302]\n\tOrdinal0 [0x00D877E0+948192]\n\tOrdinal0 [0x00D886E6+952038]\n\tGetHandleVerifier [0x01160CB2+2738370]\n\tGetHandleVerifier [0x011521B8+2678216]\n\tGetHandleVerifier [0x00F417AA+512954]\n\tGetHandleVerifier [0x00F40856+509030]\n\tOrdinal0 [0x00E5743B+1799227]\n\tOrdinal0 [0x00E5BB68+1817448]\n\tOrdinal0 [0x00E5BC55+1817685]\n\tOrdinal0 [0x00E65230+1856048]\n\tBaseThreadInitThunk [0x75DBFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x773E7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x773E7A6E+238]", "trace": "self = <test_create_account.TestCreateAccount object at 0x000002CA8D926E30>\n\n>   ???\n\nh:\\Git_projekty\\Demo_page-master\\Tests\\test_create_account.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTests\\my_account_page.py:32: in get_error_msg\n    return self.driver.find_element(*self.err_msg).text\nH:\\Python\\python 3.4\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:857: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nH:\\Python\\python 3.4\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CA8D984070>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x773E7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x773E7A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@class=\"woocommerce-error\"]//li\"}\nE         (Session info: chrome=104.0.5112.102)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00EB78B3+2193587]\nE       \tOrdinal0 [0x00E50681+1771137]\nE       \tOrdinal0 [0x00D641A8+803240]\nE       \tOrdinal0 [0x00D924A0+992416]\nE       \tOrdinal0 [0x00D9273B+993083]\nE       \tOrdinal0 [0x00DBF7C2+1177538]\nE       \tOrdinal0 [0x00DAD7F4+1103860]\nE       \tOrdinal0 [0x00DBDAE2+1170146]\nE       \tOrdinal0 [0x00DAD5C6+1103302]\nE       \tOrdinal0 [0x00D877E0+948192]\nE       \tOrdinal0 [0x00D886E6+952038]\nE       \tGetHandleVerifier [0x01160CB2+2738370]\nE       \tGetHandleVerifier [0x011521B8+2678216]\nE       \tGetHandleVerifier [0x00F417AA+512954]\nE       \tGetHandleVerifier [0x00F40856+509030]\nE       \tOrdinal0 [0x00E5743B+1799227]\nE       \tOrdinal0 [0x00E5BB68+1817448]\nE       \tOrdinal0 [0x00E5BC55+1817685]\nE       \tOrdinal0 [0x00E65230+1856048]\nE       \tBaseThreadInitThunk [0x75DBFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773E7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773E7A6E+238]\n\nH:\\Python\\python 3.4\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "attachments": [{"name": "stdout", "source": "af567454-0779-475b-8596-3737150fade6-attachment.txt", "type": "text/plain"}], "start": 1661194677543, "stop": 1661194690394, "uuid": "45105db1-e1c2-472d-b793-626f89793a8e", "historyId": "baabc478f60940495d6f80492bc0d26a", "testCaseId": "161e226e4df4f0f10b78e4f9eb503ee2", "fullName": "Tests.test_create_account.TestCreateAccount#test_create_account_failed", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_create_account"}, {"name": "subSuite", "value": "TestCreateAccount"}, {"name": "host", "value": "DESKTOP-3351BCE"}, {"name": "thread", "value": "820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_create_account"}]}